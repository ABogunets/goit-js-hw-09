{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAIMC,EAAWC,SAASC,cAAc,QAClCC,EAAgBF,SAASC,cAAc,kBACvCE,EAAeH,SAASC,cAAc,iBACtCG,EAAYJ,SAASC,cAAc,mBAyBzC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACrBC,YAAW,WACLN,EAAeI,EAAI,CAAEN,WAAUC,UAC9BM,EAAI,CAAEP,WAAUC,S,GAClBA,E,IA7BXR,EAASgB,iBAAiB,UAE1B,SAAsBC,GACpBA,EAAEC,iBAMF,IALA,IAAMC,GAAchB,EAAciB,MAC5BC,GAAajB,EAAagB,MAC1BE,GAAUjB,EAAUe,MACtBG,EAAeJ,EAEVK,EAAgB,EAAGA,GAAiBF,EAAQE,GAAiB,EACjElB,EAAckB,EAAeD,GAC7BE,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAEjBV,EAAA6B,OAAOC,QAAQ,qBAAoCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE1DsB,OAAM,SAAAJ,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAElBV,EAAA6B,OAAOI,QAAQ,oBAAmCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE5De,GAAgBF,C","sources":["src/js/03-promises.js"],"sourcesContent":[" // Notify import\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport \"notiflix/dist/notiflix-3.2.6.min.css\";\n\n//Refs\nconst inputRef = document.querySelector('form');\nconst firstDelayRef = document.querySelector('[name=\"delay\"]');\nconst delayStepRef = document.querySelector('[name=\"step\"]');\nconst amountRef = document.querySelector('[name=\"amount\"]');\n\ninputRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const firstDelay = +firstDelayRef.value;\n  const delayStep = +delayStepRef.value;\n  const amount = +amountRef.value;\n  let promiseDelay = firstDelay;\n  \n  for (let promiseNumber = 1; promiseNumber <= amount; promiseNumber += 1) {\n       createPromise(promiseNumber, promiseDelay)\n      .then(({ position, delay }) => {\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    promiseDelay += delayStep;\n  }\n} \n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((res, rej) =>{\n      setTimeout(() => {\n        if (shouldResolve) res({ position, delay })\n        else rej({ position, delay })\n        }, delay);\n      });\n  }\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$inputRef","document","querySelector","$ce04d3a99e08e73b$var$firstDelayRef","$ce04d3a99e08e73b$var$delayStepRef","$ce04d3a99e08e73b$var$amountRef","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","addEventListener","e","preventDefault","firstDelay","value","delayStep","amount","promiseDelay","promiseNumber","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.e8cf1e3c.js.map"}