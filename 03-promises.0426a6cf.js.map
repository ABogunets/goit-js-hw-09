{"mappings":"oeACA,IAAAA,EAAAC,EAAA,SAIA,MAAMC,EAAWC,SAASC,cAAc,QAClCC,EAAgBF,SAASC,cAAc,kBACvCE,EAAeH,SAASC,cAAc,iBACtCG,EAAYJ,SAASC,cAAc,mBAyBzC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACrBC,YAAW,KACLN,EAAeI,EAAI,C,SAAEN,E,MAAUC,IAC9BM,EAAI,C,SAAEP,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CA7BjBR,EAASgB,iBAAiB,UAE1B,SAAsBC,GACpBA,EAAEC,iBACF,MAAMC,GAAchB,EAAciB,MAC5BC,GAAajB,EAAagB,MAC1BE,GAAUjB,EAAUe,MAC1B,IAAIG,EAAeJ,EAEnB,IAAK,IAAIK,EAAgB,EAAGA,GAAiBF,EAAQE,GAAiB,EACjElB,EAAckB,EAAeD,GAC7BE,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MAEjBV,EAAA4B,OAAOC,QAAQ,qBAAqBpB,QAAeC,MAAU,IAE9DoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAElBV,EAAA4B,OAAOG,QAAQ,oBAAoBtB,QAAeC,MAAU,IAEhEe,GAAgBF,C","sources":["src/js/03-promises.js"],"sourcesContent":[" // Notify import\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport \"notiflix/dist/notiflix-3.2.6.min.css\";\n\n//Refs\nconst inputRef = document.querySelector('form');\nconst firstDelayRef = document.querySelector('[name=\"delay\"]');\nconst delayStepRef = document.querySelector('[name=\"step\"]');\nconst amountRef = document.querySelector('[name=\"amount\"]');\n\ninputRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const firstDelay = +firstDelayRef.value;\n  const delayStep = +delayStepRef.value;\n  const amount = +amountRef.value;\n  let promiseDelay = firstDelay;\n  \n  for (let promiseNumber = 1; promiseNumber <= amount; promiseNumber += 1) {\n       createPromise(promiseNumber, promiseDelay)\n      .then(({ position, delay }) => {\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    promiseDelay += delayStep;\n  }\n} \n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((res, rej) =>{\n      setTimeout(() => {\n        if (shouldResolve) res({ position, delay })\n        else rej({ position, delay })\n        }, delay);\n      });\n  }\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$inputRef","document","querySelector","$47d4ff9957288465$var$firstDelayRef","$47d4ff9957288465$var$delayStepRef","$47d4ff9957288465$var$amountRef","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","addEventListener","e","preventDefault","firstDelay","value","delayStep","amount","promiseDelay","promiseNumber","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.0426a6cf.js.map"}