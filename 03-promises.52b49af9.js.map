{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAIMC,EAAUC,SAASC,cAAc,QACjCC,EAAgBF,SAASC,cAAc,kBACvCE,EAAeH,SAASC,cAAc,iBACtCG,EAAYJ,SAASC,cAAc,mBAEzCF,EAAQM,iBAAiB,UAEzB,SAAsBC,G,kBAuBtB,IAAuBC,EAAUC,EACzBC,GADeF,EAfFG,EAeYF,EAfGG,EAgB5BF,EAAgBG,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAAKC,GACrBC,YAAW,WACLR,EAAeM,EAAI,CAAER,WAAUC,UAC9BQ,EAAI,CAAET,WAAUC,S,GAClBA,E,KApBJU,MAAK,SAAAC,G,IAAGZ,EAAQY,EAARZ,SAAUC,EAAKW,EAALX,MAEjBX,EAAAuB,OAAOC,QAAQ,qBAAoCC,OAAff,EAAS,QAAYe,OAANd,EAAM,M,IAE1De,OAAM,SAAAJ,G,IAAGZ,EAAQY,EAARZ,SAAUC,EAAKW,EAALX,MAElBX,EAAAuB,OAAOI,QAAQ,oBAAmCF,OAAff,EAAS,QAAYe,OAANd,EAAM,M,IAEzDiB,SAAQ,WAAYf,IAAkBgB,GAAQ3B,EAAQ4B,O,IAEzDhB,GAAgBiB,C,EAlBlBtB,EAAEuB,iBAMF,IALA,IAAMC,GAAc5B,EAAc6B,MAC5BH,GAAazB,EAAa4B,MAC1BL,GAAUtB,EAAU2B,MACtBpB,EAAemB,EAEVE,EAAgB,EAAGA,GAAiBN,EAAQM,GAAiB,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":[" // Notify import\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport \"notiflix/dist/notiflix-3.2.6.min.css\";\n\n//Refs\nconst formRef = document.querySelector('form');\nconst firstDelayRef = document.querySelector('[name=\"delay\"]');\nconst delayStepRef = document.querySelector('[name=\"step\"]');\nconst amountRef = document.querySelector('[name=\"amount\"]');\n\nformRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const firstDelay = +firstDelayRef.value;\n  const delayStep = +delayStepRef.value;\n  const amount = +amountRef.value;\n  let promiseDelay = firstDelay;\n  \n  for (let promiseNumber = 1; promiseNumber <= amount; promiseNumber += 1) {\n       createPromise(promiseNumber, promiseDelay)\n      .then(({ position, delay }) => {\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      })\n      .finally(() => { if (promiseNumber === amount) formRef.reset() })\n    \n    promiseDelay += delayStep;\n  }\n} \n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((res, rej) =>{\n      setTimeout(() => {\n        if (shouldResolve) res({ position, delay })\n        else rej({ position, delay })\n        }, delay);\n      });\n  }\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$firstDelayRef","$ce04d3a99e08e73b$var$delayStepRef","$ce04d3a99e08e73b$var$amountRef","addEventListener","e","position","delay","shouldResolve","promiseNumber","promiseDelay","Math","random","Promise","res","rej","setTimeout","then","param","Notify","success","concat","catch","failure","finally","amount","reset","delayStep","preventDefault","firstDelay","value","promiseNumber1","_loop"],"version":3,"file":"03-promises.52b49af9.js.map"}